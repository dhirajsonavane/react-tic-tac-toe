{"version":3,"sources":["component/Square.js","component/Board.js","component/Game.js","shared/NavBar.js","shared/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Square","props","Button","variant","onClick","style","height","width","margin","fontSize","value","Board","i","this","squares","className","renderSquare","React","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","key","color","jumpTo","marginTop","handleClick","NavBar","AppBar","position","Toolbar","Typography","Copyright","target","href","Date","getFullYear","useStyles","makeStyles","theme","root","display","flexDirection","minHeight","main","spacing","marginBottom","footer","padding","backgroundColor","palette","type","grey","Footer","classes","Container","maxWidth","App","CssBaseline","Card","CardContent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a70afc15.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction Square(props) {\n  return (\n    <Button \n      variant=\"contained\" \n      onClick={props.onClick}\n      style={{height: 100, width: 100, margin: 2, fontSize: 'xx-large'}}>{props.value === null? '': props.value}</Button>\n  );\n}\n\nexport default Square;\n","import React from \"react\";\nimport Square from './Square';\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Board from \"./Board\";\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null),\n        },\n      ],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares,\n        },\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ? \"Go to move #\" + move : \"Go to game start\";\n      return (\n        <li key={move}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => this.jumpTo(move)}\n            style={{width: 200, marginTop: 10}}\n          >\n            {desc}\n          </Button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <h3>{status}</h3>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst NavBar = () => {\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h5\" color=\"inherit\">\n            React Material UI - Tic Tac Toe Game\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default NavBar;","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {'Copyright Â© '}\n      <a color=\"inherit\" target='_blank' \n      href=\"https://github.com/dhirajsonavane/react-tic-tac-toe\">\n      React Material UI - Tic Tac Toe Game\n      </a>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '10vh',\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: 'auto',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\n  },\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <footer className={classes.footer}>\n        <Container maxWidth=\"sm\">\n          <Typography variant=\"body1\">Website created by Dhiraj Sonavane (dhiraj.sonavane@gmail.com)</Typography>\n          <Copyright />\n        </Container>\n      </footer>\n    </div>\n  );\n}","import React from \"react\";\nimport Game from \"./component/Game\";\nimport \"./App.css\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport NavBar from \"./shared/NavBar\";\nimport Footer from './shared/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <CssBaseline />\n      <Container maxWidth=\"sm\" style={{minHeight: 600}}>\n        <Card>\n          <CardContent>\n            <Game />\n          </CardContent>\n        </Card>\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}